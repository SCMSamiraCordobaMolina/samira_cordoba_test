Punto 1) 

a- El script de python se genera con la extension ".py". 
Por ejemplo: extension_del_sript.py 

b- Una variable es un lugar donde yo puedo guardar un dato de cualquier tipo, 
bajo un nombre claro y descriptivo cuando lo lea.

Punto 2) 

a- Son cuatros tipos de datos: 

String
Int 
Float
Boolean

* La diferencia está en que el Int es un dato numerico tipo entero y Float numerico de tipo decimal.

b- Tipos de colecciones: 
List 
Tupla
Dict

* A los tipos list se les puede añadir datos despues de creada, la tupla no.

Punto 3) 

a- El print que se muestra por consola es:  "Ha ingresado a la segunda validación." 
porque al ejecutarlo y revisando las condiciones pasa esto: 

-La primer condicion nunca va a ser igual a 0, porque ya declaraste la variable en 4.
-La segunda sí se cumple porque 4 es mayor que 3.
-la tercera no se cumple porque esta variable nunca cambia de valor, sigue siendo 4.
-la cuarta no pasa, porque una de las condiciones anteriores si se cumplio. 

b- El mensaje por consola dice: "Ha ingresado a la segunda validación."
porque aunque ahora sí se cumple la tercer condicion, tambien se cumple la segunda, 
ademas de ser redundante, se ejecuta el bloque de codigo de lo primero que se cumpla. 


Punto 4)
a- Un bucle for termina cuando la condicion que recorre, donde la variable por ejemplo,
cambie de True a False.

b- Un bucle while termina cuando la condicion que tiene no se cumpla mas, se puede hacer  con una bandera,
o bien se puede cortar con la palabra reservada break.

Punto 5) 

a- git se compone de 3 areas: Working Directory, Staging Area, Repository. 

b- Git add es el comando para pasar los cambios.

c- Con el comando git commit -m 'creando un commit'se crea un commit.

d- Con el comando git push, enviamos nuestros cambios locales al repositorio remoto.

e- Para actualizar los cambios ya subidos al repo remoto, usamos git pull. 


Punto 6) 

conozco (de las que mas recuerdo): 
enumerate() => Sirve para enumerar y colocar en un "id" o posicion cada elemento.
map() => Sirve para resolver fn dentro de cada elemento. 
filter()  => Filtra los elementos retornando la condicion que le aplicas, y los imprime luego.

NOTA: hay muchas mas funciones de orden superios, estas son las que mejor puedo expicar en mis palabras :)

Punto 7) 

a- El yield "pausa" la fn y guarda la variable hasta que la vuelvas a usar 
mientras que el return te fuerza a ejecutar a cada rato la fn para guardar la variable


Punto 8)

El beneficio sería que otro puede ver que importaste y de donde, y reutilizar funciones.

Punto 9)

a- La palabra reservada para manejar una excepcion es try.

b- Con la sentencia except, donde se pone el error qe te daria.

Punto 10) 







